{
  "status": {
    "deploying": "App Deploying",
    "policy_changing": "Policy changes",
    "deployed": "アプリDeployd",
    "deploy_failed": "Application deployment failed",
    "policy_change_failed": "Policy change failed",
    "policy_change_complete": "Policy change completed",
    "tasking": "Deploying tasks in progress",
    "task_complete": "Deployed task completed",
    "task_failed": "Failed to deploy task execution",
    "complete": "Execution completed",
    "failed": "Execution Failed",
    "pending": "Awaiting execution",
    "running": "In progress"
  },
  "tip": {
    "rolling_update": "Scroll Updates",
    "rolling_update_tip": "Slow to replace the version with a new version。 Alnew versions appear, old versions will be scaled to keepp the total number of applications. This the default policy for Deemployment objects。",
    "recreate": "Rebuilding",
    "recreate_tip": "Rebuild the deployment will delete the old version before launching the new version, so this will ensure that the two versions of the app will never run simaneously, but will shutdown during deployment.",
    "blue_green": "Blue Green",
    "blue_green_tip": "Blue Green deployment (sometimes referred to as Red Black) also deploys old and new versions of applications which only older versions will receive production traffic, allowing developers to test new versions before switching them to new versions.",
    "canary": "Gentist Release (Grayscale)",
    "canary_tip": "Deploy exposing some of the users to a new version of the application while providing the rest of the traffic to the old version。 Once the experice of the new version is correct, the old version can be gradually replced. The access controllers and vice grids are Nginx and Istio) are more can。 (e.g. achieve traffic splitting of very fine particles, split based on HTTP ヘッダいている",
    "switch_deploy": "Application deployment switched to <span class=\"warning--text\">{0}</span> mode which automatically triggers traffic switches when it first runs. Please confirm execution.",
    "restart_alert": "This action will cause the service to restart",
    "realtime_status": "Real-Time Status",
    "task_center": "Task Center",
    "status": "Status",
    "image": "Mirror",
    "replicas": "Number of copies",
    "running": "Running",
    "deploy_policy": "Deployment Policy",
    "policy": "Policy",
    "step": "Step",
    "pre_weight": "Preset Weight",
    "real_weight": "アクシチュエーション",
    "info": "Information",
    "request_type": "Service Access Method",
    "port": "ポート",
    "realtime_rate": "altime Rate",
    "last_24_hours": "Last 24 hours",
    "total_request": "Total Requests",
    "response_time": "Response Time",
    "error_request_count": "Exception requests",
    "traffic": "Traffic",
    "realtime": "ライブ",
    "in": "現金",
    "out": "Outgoing:",
    "step_status": "Task Step Status",
    "error_info": "エラーメッセージを表示",
    "traffic_topology": "Traffic in VBL.",
    "step_and_traffic": "Step &Traffic"
  },
  "operate": {
    "switch_deploy": "Switch Deployment Mode",
    "detail": "View Details",
    "rollback": "Rolloback",
    "restart": "Restart app",
    "abort": "エイト",
    "continue": "Continue",
    "redo": "Retry"
  },
  "tab": {
    "resource_live": "Resource Live",
    "resource_diff": "Resource Diff",
    "log": "ログオン",
    "app_status": "App Status"
  },
  "table": {
    "name": "Name",
    "status": "Status",
    "message": "メッセンジャー",
    "first_trigger_at": "First Time",
    "last_trigger_at": "Last Time",
    "task": "Tasks",
    "start_at": "Start Time",
    "end_at": "End Time"
  }
}
